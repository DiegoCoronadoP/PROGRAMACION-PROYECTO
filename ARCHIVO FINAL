
# Importar las bibliotecas necesarias
import re

#BIENVENIDA!
print("Hola y bienvenido a nuestro programa que analiza tus datos con el fin de hacer unsa sugerencia de empleo completa,¡y darle al usuario una gran experiencia!\n")
print("porfavor sigue las instrucciones del programa\n")
# Definir una funcion que tome los datos del usuario como entrada
def analizar_datos_usuario(campo_laboral, habilidades, cursos, experiencias, genero, edad):
    # Inicializar una lista vacia para almacenar las recomendaciones laborales
    recomendaciones_laborales = []

    # Definir un diccionario de campos laborales y habilidades correspondientes
    habilidades_laborales = {
        "ingenieria de software": ["programacion", "desarrollo de software", "pruebas de software"],
        "ciencia de datos": ["analisis de datos", "aprendizaje automatico", "estadisticas"],
        "marketing": ["redes sociales", "SEO", "creacion de contenido"],
        "diseño": ["diseño grafico", "diseño UX/UI", "ilustracion"],
        "finanzas": ["contabilidad", "analisis financiero", "banca de inversion"],
        "recursos humanos": ["reclutamiento", "gestion del talento", "administracion de beneficios"],
        "gestion de operaciones": ["gestion de la cadena de suministro", "logistica", "mejora de procesos"],
        "desarrollo de negocios": ["investigacion de mercado", "analisis competitivo", "planificacion estrategica"],
        "gestion de proyectos": ["metodologias agiles", "planificacion de proyectos", "gestion de riesgos"],
        "servicio al cliente": ["soporte al cliente", "retencion de clientes", "resolucion de conflictos"],
        "ventas": ["estrategia de ventas", "gestion de cuentas", "negociacion"],
        "redes": ["arquitectura de redes", "seguridad de redes", "administracion de redes"],
        "administracion de bases de datos": ["diseno de bases de datos", "desarrollo de bases de datos", "gestion de bases de datos"],
        "inteligencia artificial": ["aprendizaje automatico", "procesamiento de lenguaje natural", "vision por computadora"],
        "ciberseguridad": ["analisis de seguridad", "pruebas de penetracion", "respuesta a incidentes"],
        "analisis de datos": ["visualizacion de datos", "analisis estadistico", "mineria de datos"],
        "marketing digital": ["SEO", "PPC", "marketing en redes sociales"],
        "ingenieria electrica": ["diseno de circuitos", "microcontroladores", "sistemas electricos"],
        "ingenieria mecanica": ["diseno mecanico", "sistemas termicos", "sistemas mecanicos"],
        "ingenieria civil": ["analisis estructural", "gestion de la construccion", "ingenieria de transporte"]
    }

    # Iterar a traves de los campos laborales y habilidades correspondientes
    for campo_laboral, lista_habilidades in habilidades_laborales.items():
        # Verificar si las habilidades del usuario coinciden con las habilidades requeridas para el campo laboral
        if set(habilidades).intersection(lista_habilidades):
            # Si hay una coincidencia, agregar el campo laboral a la lista de recomendaciones laborales
            recomendaciones_laborales.append(campo_laboral)

    # Definir un diccionario de titulos laborales y cursos correspondientes
    cursos_laborales = {
        "ingeniero de software": ["Introduccion a la Ciencia de la Computacion", "Estructuras de Datos y Algoritmos", "Ingenieria de Software"],
        "cientifico de datos": ["Introduccion a la Ciencia de Datos", "Aprendizaje Automatico", "Aprendizaje Profundo"],
        "especialista en marketing": ["Marketing en Redes Sociales", "SEO", "Marketing de Contenido"],
        "diseñador grafico": ["Diseño Grafico", "Diseño UX/UI", "Ilustracion"],
        "analista financiero": ["Contabilidad Financiera", "Gestion Financiera", "Analisis de Inversiones"],
        "gerente de recursos humanos": ["Gestion de Recursos Humanos", "Comportamiento Organizacional", "Administracion de Beneficios"],
        "gerente de operaciones": ["Gestion de Operaciones", "Gestion de la Cadena de Suministro", "Mejora de Procesos"],
        "gerente de desarrollo de negocios": ["Desarrollo de Negocios", "Investigacion de Mercado", "Analisis Competitivo"],
        "gerente de proyectos": ["Gestion de Proyectos", "Metodologias Agiles", "Gestion de Riesgos"],
        "representante de servicio al cliente": ["Servicio al Cliente", "Soporte al Cliente", "Resolucion de Conflictos"],
        "representante de ventas": ["Estrategia de Ventas", "Gestion de Cuentas", "Negociacion"],
        "administrador de redes": ["Administracion de Redes", "Seguridad de Redes", "Arquitectura de Redes"],
        "administrador de bases de datos": ["Administracion de Bases de Datos", "Diseno de Bases de Datos", "Desarrollo de Bases de Datos"],
        "ingeniero en inteligencia artificial": ["Inteligencia Artificial", "Aprendizaje Automatico", "Procesamiento de Lenguaje Natural"],
        "especialista en ciberseguridad": ["Ciberseguridad", "Analisis de Seguridad", "Pruebas de Penetracion"],
        "analista de datos": ["Analisis de Datos", "Visualizacion de Datos", "Analisis Estadistico"],
        "especialista en marketing digital": ["Marketing Digital", "SEO", "PPC"],
        "ingeniero electrico": ["Ingenieria Electrica", "Diseno de Circuitos", "Microcontroladores"],
        "ingeniero mecanico": ["Ingenieria Mecanica", "Diseno Mecanico", "Sistemas Termicos"],
        "ingeniero civil": ["Ingenieria Civil", "Analisis Estructural", "Gestion de la Construccion"]
    }

    # Iterar a traves de los titulos laborales y cursos correspondientes
    for titulo, lista_cursos in cursos_laborales.items():
        # Verificar si los cursos del usuario coinciden con los cursos requeridos para el titulo laboral
        if set(cursos).intersection(lista_cursos):
            # Si hay una coincidencia, agregar el titulo laboral a la lista de recomendaciones laborales
            recomendaciones_laborales.append(titulo)

    # Definir un diccionario de titulos laborales y experiencias correspondientes
    experiencias_laborales = {
        "ingeniero de software": ["desarrollo de software", "programacion", "pruebas de software"],
        "cientifico de datos": ["analisis de datos", "aprendizaje automatico", "estadisticas"],
        "especialista en marketing": ["redes sociales", "SEO", "creacion de contenido"],
        "diseñador grafico": ["diseño grafico", "diseño UX/UI", "ilustracion"],
        "analista financiero": ["analisis financiero", "modelado financiero", "analisis de inversiones"],
        "gerente de recursos humanos": ["reclutamiento", "gestion del talento", "administracion de beneficios"],
        "gerente de operaciones": ["gestion de la cadena de suministro", "logistica", "mejora de procesos"],
        "gerente de desarrollo de negocios": ["investigacion de mercado", "analisis competitivo", "planificacion estrategica"],
        "gerente de proyectos": ["gestion de proyectos", "metodologias agiles", "gestion de riesgos"],
        "representante de servicio al cliente": ["soporte al cliente", "retencion de clientes", "resolucion de conflictos"],
        "representante de ventas": ["estrategia de ventas", "gestion de cuentas", "negociacion"],
        "administrador de redes": ["arquitectura de redes", "seguridad de redes", "administracion de redes"],
        "administrador de bases de datos": ["diseno de bases de datos", "desarrollo de bases de datos", "gestion de bases de datos"],
        "ingeniero en inteligencia artificial": ["aprendizaje automatico", "procesamiento de lenguaje natural", "vision por computadora"],
        "especialista en ciberseguridad": ["analisis de seguridad", "pruebas de penetracion", "respuesta a incidentes"],
        "analista de datos": ["visualizacion de datos", "analisis estadistico", "mineria de datos"],
        "especialista en marketing digital": ["SEO", "PPC", "marketing en redes sociales"],
        "ingeniero electrico": ["diseno de circuitos", "microcontroladores", "sistemas electricos"],
        "ingeniero mecanico": ["diseno mecanico", "sistemas termicos", "sistemas mecanicos"],
        "ingeniero civil": ["analisis estructural", "gestion de la construccion", "ingenieria de transporte"]
    }

    # Iterar a traves de los titulos laborales y experiencias correspondientes
    for titulo, lista_experiencias in experiencias_laborales.items():
        # Verificar si las experiencias del usuario coinciden con las experiencias requeridas para el titulo laboral
        if set(experiencias).intersection(lista_experiencias):
            # Si hay una coincidencia, agregar el titulo laboral a la lista de recomendaciones laborales
            recomendaciones_laborales.append(titulo)

    # Definir un diccionario de titulos laborales y requisitos correspondientes de genero y edad
    requisitos_laborales = {
        "ingeniero de software": {"genero": "cualquiera", "edad": "18-35"},
        "cientifico de datos": {"genero": "cualquiera", "edad": "25-40"},
        "especialista en marketing": {"genero": "cualquiera", "edad": "22-30"},
        "diseñador grafico": {"genero": "cualquiera", "edad": "20-35"},
        "analista financiero": {"genero": "cualquiera", "edad": "25-40"},
        "gerente de recursos humanos": {"genero": "cualquiera", "edad": "30-45"},
        "gerente de operaciones": {"genero": "cualquiera", "edad": "30-45"},
        "gerente de desarrollo de negocios": {"genero": "cualquiera", "edad": "30-45"},
        "gerente de proyectos": {"genero": "cualquiera", "edad": "30-45"},
        "representante de servicio al cliente": {"genero": "cualquiera", "edad": "18-30"},
        "representante de ventas": {"genero": "cualquiera", "edad": "25-40"},
        "administrador de redes": {"genero": "cualquiera", "edad": "25-40"},
        "administrador de bases de datos": {"genero": "cualquiera", "edad": "25-40"},
        "ingeniero en inteligencia artificial": {"genero": "cualquiera", "edad": "25-40"},
        "especialista en ciberseguridad": {"genero": "cualquiera", "edad": "25-40"},
        "analista de datos": {"genero": "cualquiera", "edad": "25-40"},
        "especialista en marketing digital": {"genero": "cualquiera", "edad": "22-30"},
        "ingeniero electrico": {"genero": "cualquiera", "edad": "25-40"},
        "ingeniero mecanico": {"genero": "cualquiera", "edad": "25-40"},
        "ingeniero civil": {"genero": "cualquiera", "edad": "25-40"}
    }

    # Iterar a traves de los titulos laborales y requisitos correspondientes
    for titulo, requisitos in requisitos_laborales.items():
        edad_minima, edad_maxima = map(int, requisitos["edad"].split("-"))
        if genero == requisitos["genero"] and edad_minima <= edad <= edad_maxima:
            recomendaciones_laborales.append(titulo)

    # Devolver la lista de recomendaciones laborales
    return recomendaciones_laborales

# Obtener los datos del usuario
campo_laboral = input("Ingrese su campo laboral: ")
habilidades = input("Ingrese sus habilidades (separadas por comas): ").split(",")
cursos = input("Ingrese los cursos que ha tomado (separados por comas): ").split(",")
experiencias = input("Ingrese sus experiencias laborales (separadas por comas): ").split(",")
genero = input("Ingrese su genero: ")
edad = int(input("Ingrese su edad: "))

# Analizar los datos del usuario y obtener las recomendaciones laborales
recomendaciones_laborales = analizar_datos_usuario(campo_laboral, habilidades, cursos, experiencias, genero, edad)
#imprimir los datos antes datos
print("\nDATOS A CONSULTAR\n")
print(f"trabajo en interes: {campo_laboral}\nHabilidades: {habilidades}\nCursos: {cursos}\nExperiencias: {experiencias}\nGenero: {genero}\nEdad: {edad}\n")
# Imprimir las recomendaciones laborales
print("Recomendaciones laborales:")
for recomendacion in recomendaciones_laborales:
    print(recomendacion)

